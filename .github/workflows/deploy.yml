name: Deploy survey.petly.moscow

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/web/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 1) Ставим Node (без cache: 'pnpm'!)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 2) Включаем pnpm через corepack, чтобы команда pnpm появилась в PATH
      - name: Enable corepack (pnpm)
        run: |
          corepack enable
          corepack prepare pnpm@latest-8 --activate
          pnpm -v

      # 3) Кэшируем pnpm store (ускоряет установку)
      - name: Resolve pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      # 4) На всякий случай убираем npm lock в web (чтобы Next не ругался на второй локфайл)
      - name: Remove npm lockfile from web (if any)
        run: rm -f apps/web/package-lock.json

      # 5) Ставим зависимости ТОЛЬКО для фронта (api не трогаем)
      - name: Install deps (web only)
        run: pnpm --filter ./apps/web... install --no-frozen-lockfile

      # 6) Билдим статик
      - name: Build static web
        run: pnpm --filter ./apps/web build:static

      # 7) Кладём CNAME внутрь артефакта
      - name: Add CNAME
        run: echo 'survey.petly.moscow' > apps/web/out/CNAME

      # 8) Отгружаем артефакт для GitHub Pages
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
